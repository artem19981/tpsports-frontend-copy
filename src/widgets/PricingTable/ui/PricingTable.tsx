"use client";

import {
  Paper,
  Table,
  TableBody,
  TableCell,
  TableContainer,
  TableHead,
  TableRow,
} from "@mui/material";
import React, { ReactNode, useState } from "react";
import CheckIcon from "shared/assets/CheckIcon.svg?component";
import CloseIcon from "shared/assets/CloseIcon.svg?component";

import { Button } from "shared/ui";
import { ResponsiveTooltip } from "shared/ui/ResponsiveTooltip";
import styles from "./PricingTable.module.scss";

interface PricingRow {
  feature: string;
  item?: ReactNode;
  info: string;
  basic: React.ReactNode;
  standard: React.ReactNode;
  pro: React.ReactNode;
  sportsClub: React.ReactNode;
}

const rows: PricingRow[] = [
  {
    feature: "–ó–∞–ø—Ä–æ—Å—ã",
    info: "",
    basic: "300 –∑–∞–ø—Ä–æ—Å–æ–≤",
    standard: "750 –∑–∞–ø—Ä–æ—Å–æ–≤",
    pro: "–ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ üöÄ",
    sportsClub: "–ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ üöÄ",
  },
  {
    feature: "–¢–µ—Å—Ç–æ–≤—ã–π –ø–µ—Ä–∏–æ–¥",
    item: (
      <p>–î–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è 14 –¥–Ω–µ–π –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.</p>
    ),
    info: "",
    basic: "10 –∑–∞–ø—Ä–æ—Å–æ–≤",
    standard: <CloseIcon />,
    pro: <CloseIcon />,
    sportsClub: <CloseIcon />,
  },
  {
    feature: "–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è",
    info: "",
    basic: "–ë–∞–∑–æ–≤–∞—è",
    standard: "–†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è",
    pro: "–ì–ª—É–±–æ–∫–∞—è üî•",
    sportsClub: "–ì–ª—É–±–æ–∫–∞—è –∫–æ–º–∞–Ω–¥–Ω–∞—è üî•",
  },
  {
    feature: "–ü—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∏–µ —Ñ–∞–∏ÃÜ–ª–æ–≤",
    info: "",
    basic: "3 / –º–µ—Å—è—Ü",
    standard: "10 / –º–µ—Å—è—Ü",
    pro: "–ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ üöÄ",
    sportsClub: "–ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ üöÄ",
  },
  {
    feature: "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è",
    info: "",
    basic: <CloseIcon />,
    standard: <CheckIcon />,
    pro: <CheckIcon />,
    sportsClub: <CheckIcon />,
  },
  {
    feature: "–ü–æ–∫—É–ø–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤",
    info: "",
    basic: "10 –∑–∞–ø—Ä–æ—Å–æ–≤ / 300 ‚ÇΩ",
    standard: "10 –∑–∞–ø—Ä–æ—Å–æ–≤ / 300 ‚ÇΩ",
    pro: "–ë–µ–∑–ª–∏–º–∏—Ç",
    sportsClub: "–ë–µ–∑–ª–∏–º–∏—Ç",
  },
  {
    feature: "–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö",
    info: "",
    basic: <CloseIcon />,
    standard: <CloseIcon />,
    pro: <CheckIcon />,
    sportsClub: <CheckIcon />,
  },
  {
    feature: "–ó–∞—â–∏—Ç–∞ –¥–∞–Ω–Ω—ã—Ö",
    info: "",
    basic: <CheckIcon />,
    standard: <CheckIcon />,
    pro: <CheckIcon />,
    sportsClub: <CheckIcon />,
  },
  {
    feature: "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞",
    info: "",
    basic: "E-mail",
    standard: "E-mail, Telegram, 24/7",
    pro: "–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è",
    sportsClub: "–í—ã–¥–µ–ª–µ–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞",
  },
  {
    feature: `–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã`,
    item: (
      <>
        <p>Chat Completion - –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏–∞–ª–æ–≥–æ–≤ –∏ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –∑–∞–ø—Ä–æ—Å—ã.</p>
        <p>
          Advanced NLP - –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Ç–µ–∫—Å—Ç–∞ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π.
        </p>
        <p>
          Data Analysis - –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö, –Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–∏–∫—Ä–µ–ø–ª—ë–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤.
        </p>
        <p>
          Code Interpretation - –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–ª–æ–∂–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏
          –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤—ã—á–∏—Å–ª–µ–Ω–∏–π.
        </p>
        <p>Custom Integration - –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è.</p>
      </>
    ),
    info: "",
    basic: "Chat Completion, Advanced NLP, Data Analysis",
    standard: "Chat Completion, Advanced NLP, Data Analysis",
    pro: "Advanced NLP, Data Analysis, Code Interpretation",
    sportsClub:
      "Advanced NLP, Data Analysis, Code Interpretation, Custom Integration",
  },
];

const PricingTable: React.FC = () => {
  const [isVisible, setIsVisible] = useState(true);

  const toggleVisibility = () => {
    setIsVisible(!isVisible);
  };

  return (
    <div className={styles.table}>
      <TableContainer
        component={Paper}
        className={`${styles.table__container} ${isVisible ? styles.visible : styles.hidden}`}
        sx={{
          background:
            "linear-gradient(108.85deg, rgba(48, 48, 48, 0.4) 0.8%, rgba(48, 48, 48, 0.4) 76%, rgba(65, 65, 65, 0.4) 99.1%)",
          borderRadius: 2,
          overflowX: "scroll",
          mt: 10,
          width: 1200,
          transition: "opacity 0.5s, height 1s, visibility 0.5s",
          opacity: isVisible ? 1 : 0,
          height: isVisible ? "auto" : 0,
          visibility: isVisible ? "visible" : "hidden",
        }}
      >
        <Table>
          <TableHead>
            <TableRow>
              <TableCell
                className={styles.table__cell}
                sx={{ color: "#FFFFFF66" }}
              >
                –§—É–Ω–∫—Ü–∏—è
              </TableCell>
              {/* <TableCell className={styles.table__cell}>
              –ò–Ω—Ñ–æ
            </TableCell> */}
              <TableCell
                className={`${styles.table__cell} ${styles.table__title}`}
                sx={{ color: "#01FD4D" }}
              >
                Basic
              </TableCell>
              <TableCell
                className={`${styles.table__cell} ${styles.table__title}`}
                sx={{ color: "#01FD4D" }}
              >
                Standard
              </TableCell>
              <TableCell
                className={`${styles.table__cell} ${styles.table__title}`}
                sx={{ color: "#01FD4D" }}
              >
                Pro&nbsp;
              </TableCell>
              <TableCell
                className={`${styles.table__cell} ${styles.table__title}`}
                sx={{ color: "#01FD4D" }}
              >
                Sports Club&nbsp;
              </TableCell>
            </TableRow>
          </TableHead>

          <TableBody>
            {rows.map((row, idx) => (
              <TableRow key={idx}>
                <TableCell
                  sx={{
                    textAlign: "left!important",
                    width: "auto!important",
                  }}
                  className={`${styles.table__row}`}
                >
                  {row.feature}
                  {row.item ? (
                    <ResponsiveTooltip
                      title={row.item as any}
                      className={styles.tooltip}
                      right={true}
                    />
                  ) : (
                    <></>
                  )}
                </TableCell>
                <TableCell size="small" className={styles.table__row}>
                  {row.basic}
                </TableCell>
                <TableCell className={styles.table__row}>
                  {row.standard}
                </TableCell>
                <TableCell className={styles.table__row}>{row.pro}</TableCell>
                <TableCell
                  className={styles.table__row}
                  sx={{ color: "#fff", borderBottom: "1px solid #444" }}
                >
                  {row.sportsClub}
                </TableCell>
              </TableRow>
            ))}
          </TableBody>
        </Table>
      </TableContainer>

      <div className={styles.button__container}>
        <Button
          color="success"
          variant={"white"}
          onClick={toggleVisibility}
          sx={{ width: "280px", margin: "40px auto 0 auto" }}
        >
          {isVisible
            ? "–°–∫—Ä—ã—Ç—å –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–æ–≤"
            : "–ü–æ–∫–∞–∑–∞—Ç—å –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–æ–≤"}
        </Button>
      </div>
    </div>
  );
};

export default PricingTable;
